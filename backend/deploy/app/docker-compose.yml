version: '3.9'

services:
  app:
    build:
      context: ../../
      dockerfile: deploy/app/Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: shedevr
      DB_NAME: shedevr
      DB_PASSWORD: shedevr
    depends_on:
      db:
        condition: service_healthy
      db-migrate:
        condition: service_completed_successfully
    ports:
      - '8080:8080'
      - '8090:8090'
    profiles:
      - app
      - full
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  db:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: shedevr
      POSTGRES_USER: shedevr
      POSTGRES_PASSWORD: shedevr
      PGDATA: "/var/lib/postgresql/data/pgdata"
    profiles:
      - infra
      - full
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U shedevr -d shedevr" ]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    ports:
      - '5432:5432'
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  db-migrate:
    build:
      context: ../../
      dockerfile: deploy/db-migrate/Dockerfile
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB_USERNAME: shedevr
      DB_NAME: shedevr
      DB_PASSWORD: shedevr
    profiles:
      - infra
      - full
    volumes:
      - ../../db:/app/db
    depends_on:
      db:
        condition: service_healthy

volumes:
  pgdata: